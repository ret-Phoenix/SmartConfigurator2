#Использовать WinExt
#Использовать extensions

Перем СредаРазработки;
Перем Обмен;
Перем Взаимодействие;
Перем ВыборИзСписка;

#Область ПрограммныйИнтерфейс

Процедура ОчиститьБуферОбмена() Экспорт
	
	Попытка
		Буфер = Новый БуферОбмена();
		Буфер.Очистить();
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;

КонецПроцедуры

Процедура ВвестиОткрывающуюКвадратнуюСкобку() Экспорт

	МСПослатьКлавиши = Новый МСПослатьКлавиши;
	МСПослатьКлавиши.ПослатьКлавиши("[");

КонецПроцедуры

Процедура ВвестиЗакрывающуюКвадратнуюСкобку() Экспорт

	МСПослатьКлавиши = Новый МСПослатьКлавиши;
	МСПослатьКлавиши.ПослатьКлавиши("]");

КонецПроцедуры

Процедура ПреобразоватьВИдентификатор() Экспорт

	ИсходныйТекст = СредаРазработки.ПолучитьВыделенныйТекст();
	
	ДопустимыеСимволы = "йцукенгшщзхъфывапролджэячсмитьбю"
		+ "qwertyuiopasdfghjklzxcvbnm"
		+ " _1234567890";

	ДопустимыйТекст = "";
	ДлинаСтроки = СтрДлина(ИсходныйТекст);
	Для А = 1 По ДлинаСтроки Цикл

		СимволИзСтроки = Сред(ИсходныйТекст, А, 1);
		Если СтрНайти(ДопустимыеСимволы, НРег(СимволИзСтроки)) > 0 Тогда
			ДопустимыйТекст = ДопустимыйТекст + СимволИзСтроки;
		Иначе
			ДопустимыйТекст = ДопустимыйТекст + " ";
		КонецЕсли;

	КонецЦикла;

	МассивСлов = СтрРазделить(ДопустимыйТекст, " ", Ложь);

	НовыйТекст = "";
	Для каждого Слово Из МассивСлов Цикл
		НовыйТекст  = НовыйТекст  + Лев(Слово, 1) + Сред(Слово, 2);
	КонецЦикла;

	СредаРазработки.УстановитьТекстВВыделение(НовыйТекст);

КонецПроцедуры

Процедура ВыбратьПрепроцессор() Экспорт
	
	СтароеЗначениеБуфераОбмена = СредаРазработки.ПолучитьТекстИзБуфераОбмена();

	Данные = Новый Соответствие;
	Данные.Вставить("&НаСервере", "&НаСервере");
	Данные.Вставить("&НаСервереБезКонтекста", "&НаСервереБезКонтекста");
	Данные.Вставить("&НаКлиенте", "&НаКлиенте");
	
	Результат = ВыборИзСписка.ВыбратьИзСписка(Данные);

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;

	СредаРазработки.УстановитьТекстВВыделение(Результат);
	Приостановить(500);

	СредаРазработки.УстановитьТекстВБуферОбмена(СтароеЗначениеБуфераОбмена);
	
КонецПроцедуры

Процедура ДублироватьСтрокуБлок() Экспорт

	СтароеЗначениеБуфераОбмена = СредаРазработки.ПолучитьТекстИзБуфераОбмена();

	СредаРазработки.ПолучитьВыделенныйТекст();
	СредаРазработки.СдвинутьКурсорВправо();
	СредаРазработки.ПерейтиВНачалоСтроки();
	СредаРазработки.ПерейтиВНачалоСтроки();

	ТекстИзБуфера = СредаРазработки.ПолучитьТекстИзБуфераОбмена();
	СредаРазработки.УстановитьТекстВВыделение(ТекстИзБуфера);
	Приостановить(500);

	СредаРазработки.УстановитьТекстВБуферОбмена(СтароеЗначениеБуфераОбмена);

КонецПроцедуры

Процедура ПродолжитьСтрокуКомментарий() Экспорт

	ВыделенныйТекст = СредаРазработки.ПолучитьУказанноеКоличествоСтрокВышеКурсора(3);
	
	МСПослатьКлавиши = Новый МСПослатьКлавиши;

	РегВыражение = Новый РегулярноеВыражение("^\s*(\||\/\/)");
	РегВыражение.ИгнорироватьРегистр = Истина;
	
	СтрокиМодуля = СтрРазделить(ВыделенныйТекст, Символы.ПС, Истина);
	КолСтрок = СтрокиМодуля.Количество() - 1;
	Для А = -КолСтрок По 0 Цикл
		Стр = СтрокиМодуля.Получить( - А);
		Если РегВыражение.Совпадает(Стр) = Истина Тогда
			Если Сред(СокрЛ(Стр), 1, 1) = "|" Тогда
				МСПослатьКлавиши.ПослатьКлавиши("{Enter}");
				СредаРазработки.УстановитьТекстВВыделение("|");
				Возврат;
			Иначе
				МСПослатьКлавиши.ПослатьКлавиши("{Enter}");
				СредаРазработки.УстановитьТекстВВыделение("//");
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// если обычный переход
	МСПослатьКлавиши.ПослатьКлавиши("{Enter}");
	
КонецПроцедуры

Процедура ИнкрементПлюПлюс() Экспорт
	Инкремент("++");
КонецПроцедуры

Процедура ИнкрементПлюРавно() Экспорт
	Инкремент("+=");
КонецПроцедуры

Процедура ИнкрементМинусМинус() Экспорт
	Инкремент("--");
КонецПроцедуры

Процедура ИнкрементМинусРавно() Экспорт
	Инкремент("-=");
КонецПроцедуры

Процедура ВыбратьШаблон() Экспорт
	
	Файл = Новый Файл("settings\СписокКаталоговВнешнихФорм.os");
	Если НЕ Файл.Существует() Тогда

		ТекстСообщения = "Невозможно прочитать файл шаблонов. "
			+ "Нет файла с настройками шаблонов. "
			+ "Необходимо указать пути шаблонов: settings/ШаблоныТекста.os";

		Взаимодействие.Предупреждение(ТекстСообщения);
		Возврат;

	КонецЕсли;

	МассивФайлов = ЗагрузитьСценарий("settings\ШаблоныТекста.os").Настройки;

	Если МассивФайлов.Количество() = 0 Тогда

		Взаимодействие.Предупреждение("Необходимо указать пути к шаблонам в файле: settings/codetemplates.json", "Ошибка");
		Возврат;

	КонецЕсли;

	СписокШаблонов = Новый Соответствие();
	
	РВ = Новый РегулярноеВыражение("{\""(.*)\"",0,[0-9],\""(.*|\w\[.*\])\"",\""(.*)");
	РВ.ИгнорироватьРегистр = Истина;
	РВ.Многострочный = Истина;
	
	Для Каждого Стр Из МассивФайлов Цикл
		Данные = Обмен.ПолучитьТекстИзФайла(Стр);
		
		Совпадения = РВ.НайтиСовпадения(Данные);
		
		Для Каждого Стр Из Совпадения Цикл
			Грп = Стр.Группы;
			
			НазваниеШаблона = Грп[1].Значение;
			НазваниеШаблона = СтрЗаменить(НазваниеШаблона, "[", "");
			НазваниеШаблона = СтрЗаменить(НазваниеШаблона, "]", "");

			Если СокрЛП(НазваниеШаблона) = "" Тогда
				Продолжить;
			КонецЕсли;

			ЗаменятьСтроку = Грп[2].Значение;
			ЗаменятьСтроку = СтрЗаменить(ЗаменятьСтроку, "[", "");
			ЗаменятьСтроку = СтрЗаменить(ЗаменятьСтроку, "]", "");

			Если СокрЛП(ЗаменятьСтроку) = "" Тогда
				Взаимодействие.УведомитьЧерезТрей("Не укаказно значение автозамены для шаблона: " + НазваниеШаблона);
				Продолжить;
			КонецЕсли;
			
			СписокШаблонов.Вставить(ЗаменятьСтроку, НазваниеШаблона);
			
		КонецЦикла;		
		
	КонецЦикла;
	
	Результат = ВыборИзСписка.ВыбратьИзСписка(СписокШаблонов);
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СредаРазработки.УстановитьТекстВВыделение(Результат);
	СредаРазработки.ОбработатьВыборШаблона();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Процедура Инкремент(ВидИнкремента)
	
	СредаРазработки.ПоместитьВБуферТекстТекущейСтроки();

	Буфер = Новый БуферОбмена();
	ТекстБуфера = Буфер.Получить();
	
	ДанныеМассив = СтрРазделить(СокрЛП(ТекстБуфера), " ", Ложь);
	ПоследнееСлово = ДанныеМассив[ДанныеМассив.Количество() - 1];
	
	
	НовыеДанные = "";
	Если ВидИнкремента = "++" Тогда
		НовыеДанные = " = " + ПоследнееСлово + " + 1;";
	ИначеЕсли ВидИнкремента = "+=" Тогда
		НовыеДанные = " = " + ПоследнееСлово + " + ;";
	ИначеЕсли ВидИнкремента = "--" Тогда
		НовыеДанные = " = " + ПоследнееСлово + " - 1;";
	ИначеЕсли ВидИнкремента = "-=" Тогда
		НовыеДанные = " = " + ПоследнееСлово + " - ;";
	Иначе
		ВызватьИсключение "Неизвестный способ инкримента";
	КонецЕсли;
	
	МСПослатьКлавиши = Новый МСПослатьКлавиши;
	МСПослатьКлавиши.ПослатьКлавиши("{End}");


	СредаРазработки.УстановитьТекстВВыделение(НовыеДанные);
	
КонецПроцедуры

#КонецОбласти

Процедура ПриСозданииОбъекта()

	СредаРазработки = ЗагрузитьСценарий("core\СредаРазработки.os");
	Обмен = ЗагрузитьСценарий("core\Обмен.os");
	Взаимодействие = ЗагрузитьСценарий("core\Взаимодействие.os");
	ВыборИзСписка = ЗагрузитьСценарий("core\SelectValue.os");
	
КонецПроцедуры
