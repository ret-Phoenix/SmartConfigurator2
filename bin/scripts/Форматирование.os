Перем СредаРазработки;
Перем Взаимодействие;

#Область ПрограммныйИнтерфейс

Процедура УбратьЛишниеПробелыСправа() Экспорт

	СтароеЗначениеБуфераОбмена = СредаРазработки.ПолучитьТекстИзБуфераОбмена();

	ВыделенныйТекст = СредаРазработки.ПолучитьВыделенныйТекст();
	НовыйТекст = УбратьПробелыСправа(ВыделенныйТекст);
	СредаРазработки.УстановитьТекстВВыделение(НовыйТекст);

	СредаРазработки.УстановитьТекстВБуферОбмена(СтароеЗначениеБуфераОбмена);
	
КонецПроцедуры

Процедура ВыравнитьПоВведеномуСимволу() Экспорт

	СтароеЗначениеБуфераОбмена = СредаРазработки.ПолучитьТекстИзБуфераОбмена();

	ВыделенныйТекст = СредаРазработки.ПолучитьВыделенныйТекст();
	СтрокиМодуля = СтрРазделить(ВыделенныйТекст, Символы.ПС, Истина);

	Если СтрокиМодуля.Количество() < 2 Тогда
		Возврат;
	КонецЕсли;

	ЗначениеВыравнивания = Взаимодействие.ВвестиСтроку("");
	Если ЗначениеВыравнивания = Неопределено Тогда
		Взаимодействие.Предупреждение("Не выбрано значение для выравнивания");
		Возврат;
	КонецЕсли;

	НовыйТекст = ВыравнитьПоЗначению(ВыделенныйТекст, ЗначениеВыравнивания);
	СредаРазработки.УстановитьТекстВВыделение(НовыйТекст);

	СредаРазработки.УстановитьТекстВБуферОбмена(СтароеЗначениеБуфераОбмена);

КонецПроцедуры

Процедура ВыравнитьПоЗапятой() Экспорт

	СтароеЗначениеБуфераОбмена = СредаРазработки.ПолучитьТекстИзБуфераОбмена();

	ВыделенныйТекст = СредаРазработки.ПолучитьВыделенныйТекст();
	СтрокиМодуля = СтрРазделить(ВыделенныйТекст, Символы.ПС, Истина);

	Если СтрокиМодуля.Количество() < 2 Тогда
		Возврат;
	КонецЕсли;

	НовыйТекст = ВыравнитьПоЗначению(ВыделенныйТекст, ",", Ложь);
	СредаРазработки.УстановитьТекстВВыделение(НовыйТекст);

	СредаРазработки.УстановитьТекстВБуферОбмена(СтароеЗначениеБуфераОбмена);

КонецПроцедуры

Процедура ВыравнитьПоРавно() Экспорт

	СтароеЗначениеБуфераОбмена = СредаРазработки.ПолучитьТекстИзБуфераОбмена();

	ВыделенныйТекст = СредаРазработки.ПолучитьВыделенныйТекст();
	СтрокиМодуля = СтрРазделить(ВыделенныйТекст, Символы.ПС, Истина);

	Если СтрокиМодуля.Количество() < 2 Тогда
		Возврат;
	КонецЕсли;

	НовыйТекст = ВыравнитьПоЗначению(ВыделенныйТекст, "=");
	СредаРазработки.УстановитьТекстВВыделение(НовыйТекст);

	СредаРазработки.УстановитьТекстВБуферОбмена(СтароеЗначениеБуфераОбмена);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция УбратьПробелыСправа(Данные)

	Регулярка = Новый РегулярноеВыражение("[ \t]+\r*\n");
	Возврат Регулярка.Заменить(Данные, Символы.ПС);

КонецФункции

Функция ВыравнитьПоЗначению(Текст, ЗначениеВыравнивания, ДобавитьПробелПередЗнакомВыравнения = Истина)
	
	ЗначениеВыравнивания = СокрЛП(ЗначениеВыравнивания);
	СимволДоВыравнивателя = ?(ДобавитьПробелПередЗнакомВыравнения, " ", "");

	Данные = "";
	МаксПозицияЗначенияВыравнивания = 0;	
	МассивСтрок = Новый Массив;

	СтрокиМодуля = СтрРазделить(Текст, Символы.ПС, Истина);
	
	// Получаем макс.позицию значения выравнивания
	Для Каждого Стр Из СтрокиМодуля Цикл

		Если Лев(СокрЛП(Стр), 2) = "//" Тогда

			МассивСтрок.Добавить(Стр);

		Иначе

			ТекПозиция = Найти(Стр, ЗначениеВыравнивания);
			
			Подстрока = Лев(Стр, ТекПозиция - 1);
			ТекПозиция = СтрДлина(СокрП(Подстрока));

			МаксПозицияЗначенияВыравнивания = Макс(МаксПозицияЗначенияВыравнивания, ТекПозиция);
			
			МассивСтрок.Добавить(Стр);

		КонецЕсли;
		
	КонецЦикла;
	
	// выравниваем по значению
	Для Каждого Стр Из МассивСтрок Цикл
		
		Если СокрЛП(Стр) = "" Тогда

			Данные = Данные + ?(Данные = "", "", Символы.ПС);
			Продолжить;

		КонецЕсли;
		
		ТекПозиция = Найти(Стр, ЗначениеВыравнивания);
		Если ТекПозиция > 0 Тогда

			ПодстрокаЛевая  = Лев(Стр, ТекПозиция - 1);
			ПодстрокаЛевая  = ДополнитьСтрокуПробелами(СокрП(ПодстрокаЛевая), МаксПозицияЗначенияВыравнивания);
			ПодстрокаПравая = СокрЛП(Сред(Стр, ТекПозиция + 1));

			НоваяСтр = ПодстрокаЛевая + СимволДоВыравнивателя + ЗначениеВыравнивания + " " + ПодстрокаПравая;

			Данные = Данные + ?(Данные = "", "", Символы.ПС) + НоваяСтр;
			
		Иначе

			Данные = Данные + ?(Данные = "", "", Символы.ПС) + Стр;

		КонецЕсли;

	КонецЦикла;
	
	Возврат УбратьПробелыСправа(Данные); 

КонецФункции

Функция ДополнитьСтрокуПробелами(Приемник, НужнаяДлинаСтроки)

	ДлинаСтроки = СтрДлина(Приемник);
	Разница     = НужнаяДлинаСтроки - ДлинаСтроки - 1;
	Пробелы     = "";
	Для А = 0 По Разница Цикл
		Пробелы = Пробелы + " ";
	КонецЦикла;
	НоваяСтрока = Приемник + Пробелы;

	Возврат НоваяСтрока;

КонецФункции

#КонецОбласти

Процедура ПриСозданииОбъекта()

	СредаРазработки = ЗагрузитьСценарий("core\СредаРазработки.os");
	Взаимодействие = ЗагрузитьСценарий("core/Взаимодействие.os");
	
КонецПроцедуры